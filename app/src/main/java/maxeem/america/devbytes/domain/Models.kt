/*
 * Copyright 2018, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package maxeem.america.devbytes.domain

import android.text.format.DateUtils.*
import maxeem.america.devbytes.app
import maxeem.america.devbytes.util.smartTruncate
import java.text.SimpleDateFormat
import java.util.*

/**
 * Domain objects are plain Kotlin data classes that represent the things in our app. These are the
 * objects that should be displayed on screen, or manipulated by the app.
 *
 * @see database for objects that are mapped to the database
 * @see network for objects that parse or prepare network calls
 */

/**
 * Videos represent a devbyte that can be played.
 */
data class Video(
        val id: Long,            // positive ID > 0 - generated by Room as ROWID
        val url: String,         // "https://www.youtube.com/watch?v=sYGKUtM2ga8"
        val updated: String,       // "2018-06-07T17:09:43+00:00",
        val title: String,       // "Android Jetpack: EmojiCompat"
        val thumbnail: String,   // "https://i4.ytimg.com/vi/sYGKUtM2ga8/hqdefault.jpg"
        val description: String) // "With the EmojiCompat library, part of Jetpack, your app can ..."
{

    companion object {
        val dateFormat = SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss", Locale.US)
    }

    val date by lazy(mode = LazyThreadSafetyMode.NONE) {
        formatDateTime(app, dateFormat.parse(updated).time, FORMAT_SHOW_DATE or FORMAT_SHOW_YEAR or FORMAT_ABBREV_ALL)
    }
    val shortDescription by lazy(mode = LazyThreadSafetyMode.NONE) {
        description.smartTruncate(200)
    }

}
